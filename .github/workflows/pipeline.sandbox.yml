# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: SDK QA - Sandbox

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  repository_dispatch:
    types:
      - SDK_Test

env:
  FEEDS_URL: https://raw.githubusercontent.com/umbrella-network/pegasus-feeds/main/prod/bsc/feeds.yaml

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 14.x ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Event Information
        if: github.event.action == 'SDK_Test'
        run: |
          echo "Event '${{ github.event.action }}' received from '${{ github.event.client_payload.repository }}'"
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - name: Unit tests for AVAX
        env:
          API_BASE_URL: ${{ secrets.API_BASE_URL_SANDBOX }}
          API_KEY: ${{ secrets.API_KEY_SANDBOX }}
          BLOCKCHAIN_PROVIDER_URL: ${{ secrets.BLOCKCHAIN_PROVIDER_URL_AVAX_SANDBOX }}
          REGISTRY_CONTRACT_ADDRESS: ${{ secrets.REGISTRY_CONTRACT_ADDRESS_AVAX_SANDBOX }}
          FEEDS_URL: ${{ env.FEEDS_URL }}
          CHAIN_ID: ${{ secrets.CHAIN_ID_AVAX }}
        run: npm run test
      - name: Unit tests for POLYGON
        env:
          API_BASE_URL: ${{ secrets.API_BASE_URL_SANDBOX }}
          API_KEY: ${{ secrets.API_KEY_SANDBOX }}
          BLOCKCHAIN_PROVIDER_URL: ${{ secrets.BLOCKCHAIN_PROVIDER_URL_POLYGON_SANDBOX }}
          REGISTRY_CONTRACT_ADDRESS: ${{ secrets.REGISTRY_CONTRACT_ADDRESS_POLYGON_SANDBOX }}
          FEEDS_URL: ${{ env.FEEDS_URL }}
          CHAIN_ID: ${{ secrets.CHAIN_ID_POLYGON }}
        run: npm run test
      - name: Unit tests for ETH
        env:
          API_BASE_URL: ${{ secrets.API_BASE_URL_SANDBOX }}
          API_KEY: ${{ secrets.API_KEY_SANDBOX }}
          BLOCKCHAIN_PROVIDER_URL: ${{ secrets.BLOCKCHAIN_PROVIDER_URL_ETH_SANDBOX }}
          REGISTRY_CONTRACT_ADDRESS: ${{ secrets.REGISTRY_CONTRACT_ADDRESS_ETH_SANDBOX }}
          FEEDS_URL: ${{ env.FEEDS_URL }}
          CHAIN_ID: ${{ secrets.CHAIN_ID_ETH }}
        run: npm run test
      - name: Unit tests for BSC
        env:
          API_BASE_URL: ${{ secrets.API_BASE_URL_SANDBOX }}
          API_KEY: ${{ secrets.API_KEY_SANDBOX }}
          BLOCKCHAIN_PROVIDER_URL: ${{ secrets.BLOCKCHAIN_PROVIDER_URL_BSC_SANDBOX }}
          REGISTRY_CONTRACT_ADDRESS: ${{ secrets.REGISTRY_CONTRACT_ADDRESS_BSC_SANDBOX }}
          FEEDS_URL: ${{ env.FEEDS_URL }}
          CHAIN_ID: ${{ secrets.CHAIN_ID_BSC }}
        run: npm run test
      - name: Lint
        run: npm run linters
  notify:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs:
      - build
    if: ${{ always() }} # You always want to be notified: success, failure, or cancelled

    steps:
      - name: Notify
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.BOT_GITHUB_TOKEN }}
          discord-webhook: ${{ secrets.DISCORD_PROD_WEBHOOK }}
          title: '${{ github.workflow }}: {{STATUS}}'
          description: '${{ github.event_name }} trigged this {{STATUS}}!'
          # include-details: 'false'
